apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: backend-image:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DB_PASSWORD
        - name: DB_NAME
          value: "postgres"

        # Health Checks tanpa endpoint khusus
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 10

        readinessProbe:
          exec:
            command:
              - sh
              - -c
              - "wget --spider -q http://localhost:8080 || exit 1"
          initialDelaySeconds: 20
          periodSeconds: 5

        startupProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 30
          periodSeconds: 5

        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"

        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 10"]

      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000